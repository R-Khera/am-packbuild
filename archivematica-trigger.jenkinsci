
node {
stage('Get code') {
   git branch: 'stable/1.7.x', url: 'https://github.com/artefactual/archivematica'
   properties([disableConcurrentBuilds(),
            gitLabConnection(''),
            [$class: 'RebuildSettings',
             autoRebuild: false,
             rebuildDisabled: false], 
            pipelineTriggers([pollSCM('*/5 * * * *')])])
}
stage ('Set properties') {
    
env.PACKAGE = sh(script: "echo archivematica", returnStdout: true).trim()
env.VERSION = sh(script: 'git describe --tags |  sed "s/^.*[^0-9]\\([0-9]*\\.[0-9]*\\.[0-9]*\\).*$/\\1/"', returnStdout: true).trim()
env.RELEASE = sh(script: 'git describe --tags |  sed "s/^.*[^0-9]\\([0-9]*\\.[0-9]*\\.[0-9]*\\)-\\(.*\\)$/\\2/"', returnStdout: true).trim()
env.REPOSITORY = sh(script: "echo jenkinsci-${VERSION}", returnStdout: true).trim()
sh '''
 # if (echo $RELEASE | grep -q rc) 
 #     then
 #         VERSION_SEPARATOR='~'
 #  else
 #        VERSION_SEPARATOR='-'
 #    RELEASE=$(echo $RELEASE | cut -d\\- -f1) 
 # fi

echo PACKAGE=${PACKAGE}
echo VERSION=${VERSION}
echo BRANCH=stable/1.7.x
echo RELEASE=${VERSION_SEPARATOR}${RELEASE}
echo REPOSITORY=${REPOSITORY}
'''
}

stage('Build rpm packages') {
build job: 'am-packbuild/rpm-jenkinsci', parameters: [
  string(name: 'PACKAGE', value: "${PACKAGE}"),
  string(name: 'BRANCH', value: 'stable/1.7.x'),
  string(name: 'GPG_ID', value: '0F4A4D31'),
  string(name: 'VERSION', value: "${VERSION}"),
  string(name: 'RELEASE', value: "${RELEASE}"),
  string(name: 'REPOSITORY', value: "${REPOSITORY}")]
}

stage('Build trusty packages') {
build job: 'am-packbuild/trusty-jenkinsci', parameters: [
  string(name: 'PACKAGE', value: "${PACKAGE}"),
  string(name: 'BRANCH', value: 'stable/1.7.x'),
  string(name: 'GPG_ID', value: '0F4A4D31'),
  string(name: 'VERSION', value: "${VERSION}"),
  string(name: 'RELEASE', value: "${RELEASE}"),
  string(name: 'REPOSITORY', value: "${REPOSITORY}")]
}

stage('Build xenial packages') {
build job: 'am-packbuild/xenial-jenkinsci', parameters: [
  string(name: 'PACKAGE', value: "${PACKAGE}"),
  string(name: 'BRANCH', value: 'stable/1.7.x'),
  string(name: 'GPG_ID', value: '0F4A4D31'),
  string(name: 'VERSION', value: "${VERSION}"),
  string(name: 'RELEASE', value: "${RELEASE}"),
  string(name: 'REPOSITORY', value: "${REPOSITORY}")]
}

}

